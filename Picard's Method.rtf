{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Courier New;}}
{\colortbl\red0\green0\blue0;\red255\green255\blue255;\red200\green200\blue200;\red0\green0\blue0;\red152\green152\blue217;\red192\green192\blue192;\red128\green128\blue255;\red170\green170\blue240;\red0\green128\blue128;\red107\green153\blue153;\red128\green0\blue0;\red172\green89\blue89;\red240\green0\blue240;\red240\green200\blue240;\red0\green0\blue160;\red135\green135\blue200;\red0\green160\blue0;\red154\green200\blue154;\red190\green0\blue190;\red190\green137\blue190;\red0\green0\blue255;\red190\green190\blue255;\red224\green160\blue0;\red224\green206\blue159;\red132\green160\blue132;\red255\green0\blue0;\red255\green200\blue200;\red64\green64\blue128;\red133\green133\blue172;\red128\green255\blue255;\red55\green55\blue55;}
{\info{\comment Generated by the Code::Blocks RTF Exporter plugin}
{\title Untitled}}

\deflang1033\pard\plain\f0\fs16  1  \cb3\cf4 // C program for Picard's iterative method
\par \cb1\cf0\ul0\i0\b0  2    
\par \cb1\cf0\ul0\i0\b0  3  \cb3\cf16 #include <math.h>
\par \cb1\cf0\ul0\i0\b0  4  \cb3\cf16 #include <stdio.h>
\par \cb1\cf0\ul0\i0\b0  5  \cb3\cf16 #define Y1(x) (1 + (x) + pow(x, 2) / 2)
\par \cb1\cf0\ul0\i0\b0  6  \cb3\cf16 #define Y2(x) (1 + (x) + pow(x, 2) / 2 + pow(x, 3) / 3 + pow(x, 4) / 8)
\par \cb1\cf0\ul0\i0\b0  7  \cb3\cf16 #define Y3(x) (1 + (x) + pow(x, 2) / 2 + pow(x, 3) / 3 + pow(x, 4) / 8 + pow(x, 5) / 15 + pow(x, 6) / 48)
\par \cb1\cf0\ul0\i0\b0  8    
\par \cb1\cf0\ul0\i0\b0  9  \cb3\cf14\b int \b0\cb1\cf0 main\cb3\cf25 ()
\par \cb1\cf0\ul0\i0\b0 10  \cb3\cf25 \{
\par \cb1\cf0\ul0\i0\b0 11      \cb3\cf14\b double \b0\cb1\cf0 start_value \cb3\cf25 = \cb3\cf12 0\cb3\cf25 , \cb1\cf0 end_value \cb3\cf25 = \cb3\cf12 3\cb3\cf25 ,
\par \cb1\cf0\ul0\i0\b0 12             \cb1\cf0 allowed_error \cb3\cf25 = \cb3\cf12 0.4\cb3\cf25 , \cb1\cf0 temp\cb3\cf25 ;
\par \cb1\cf0\ul0\i0\b0 13      \cb3\cf14\b double \b0\cb1\cf0 y1\cb3\cf25 [\cb3\cf12 30\cb3\cf25 ], \cb1\cf0 y2\cb3\cf25 [\cb3\cf12 30\cb3\cf25 ], \cb1\cf0 y3\cb3\cf25 [\cb3\cf12 30\cb3\cf25 ];
\par \cb1\cf0\ul0\i0\b0 14      \cb3\cf14\b int \b0\cb1\cf0 count\cb3\cf25 ;
\par \cb1\cf0\ul0\i0\b0 15    
\par \cb1\cf0\ul0\i0\b0 16      \cb3\cf14\b for \b0\cb3\cf25 (\cb1\cf0 temp \cb3\cf25 = \cb1\cf0 start_value\cb3\cf25 , \cb1\cf0 count \cb3\cf25 = \cb3\cf12 0\cb3\cf25 ;
\par \cb1\cf0\ul0\i0\b0 17           \cb1\cf0 temp \cb3\cf25 <= \cb1\cf0 end_value\cb3\cf25 ;
\par \cb1\cf0\ul0\i0\b0 18           \cb1\cf0 temp \cb3\cf25 = \cb1\cf0 temp \cb3\cf25 + \cb1\cf0 allowed_error\cb3\cf25 , \cb1\cf0 count\cb3\cf25 ++) \{
\par \cb1\cf0\ul0\i0\b0 19    
\par \cb1\cf0\ul0\i0\b0 20          \cb1\cf0 y1\cb3\cf25 [\cb1\cf0 count\cb3\cf25 ] = \cb1\cf0 Y1\cb3\cf25 (\cb1\cf0 temp\cb3\cf25 );
\par \cb1\cf0\ul0\i0\b0 21          \cb1\cf0 y2\cb3\cf25 [\cb1\cf0 count\cb3\cf25 ] = \cb1\cf0 Y2\cb3\cf25 (\cb1\cf0 temp\cb3\cf25 );
\par \cb1\cf0\ul0\i0\b0 22          \cb1\cf0 y3\cb3\cf25 [\cb1\cf0 count\cb3\cf25 ] = \cb1\cf0 Y3\cb3\cf25 (\cb1\cf0 temp\cb3\cf25 );
\par \cb1\cf0\ul0\i0\b0 23      \cb3\cf25 \}
\par \cb1\cf0\ul0\i0\b0 24    
\par \cb1\cf0\ul0\i0\b0 25      \cb1\cf0 printf\cb3\cf25 (\cb3\cf20 "\\nX\\n"\cb3\cf25 );
\par \cb1\cf0\ul0\i0\b0 26      \cb3\cf14\b for \b0\cb3\cf25 (\cb1\cf0 temp \cb3\cf25 = \cb1\cf0 start_value\cb3\cf25 ;
\par \cb1\cf0\ul0\i0\b0 27           \cb1\cf0 temp \cb3\cf25 <= \cb1\cf0 end_value\cb3\cf25 ;
\par \cb1\cf0\ul0\i0\b0 28           \cb1\cf0 temp \cb3\cf25 = \cb1\cf0 temp \cb3\cf25 + \cb1\cf0 allowed_error\cb3\cf25 ) \{
\par \cb1\cf0\ul0\i0\b0 29  
\par \cb1\cf0\ul0\i0\b0 30          \cb1\cf0 printf\cb3\cf25 (\cb3\cf20 "%.4lf "\cb3\cf25 , \cb1\cf0 temp\cb3\cf25 );
\par \cb1\cf0\ul0\i0\b0 31      \cb3\cf25 \}
\par \cb1\cf0\ul0\i0\b0 32    
\par \cb1\cf0\ul0\i0\b0 33      \cb1\cf0 printf\cb3\cf25 (\cb3\cf20 "\\n\\nY(1)\\n"\cb3\cf25 );
\par \cb1\cf0\ul0\i0\b0 34      \cb3\cf14\b for \b0\cb3\cf25 (\cb1\cf0 temp \cb3\cf25 = \cb1\cf0 start_value\cb3\cf25 , \cb1\cf0 count \cb3\cf25 = \cb3\cf12 0\cb3\cf25 ;
\par \cb1\cf0\ul0\i0\b0 35           \cb1\cf0 temp \cb3\cf25 <= \cb1\cf0 end_value\cb3\cf25 ;
\par \cb1\cf0\ul0\i0\b0 36           \cb1\cf0 temp \cb3\cf25 = \cb1\cf0 temp \cb3\cf25 + \cb1\cf0 allowed_error\cb3\cf25 , \cb1\cf0 count\cb3\cf25 ++) \{
\par \cb1\cf0\ul0\i0\b0 37    
\par \cb1\cf0\ul0\i0\b0 38          \cb1\cf0 printf\cb3\cf25 (\cb3\cf20 "%.4lf "\cb3\cf25 , \cb1\cf0 y1\cb3\cf25 [\cb1\cf0 count\cb3\cf25 ]);
\par \cb1\cf0\ul0\i0\b0 39      \cb3\cf25 \}
\par \cb1\cf0\ul0\i0\b0 40    
\par \cb1\cf0\ul0\i0\b0 41      \cb1\cf0 printf\cb3\cf25 (\cb3\cf20 "\\n\\nY(2)\\n"\cb3\cf25 );
\par \cb1\cf0\ul0\i0\b0 42      \cb3\cf14\b for \b0\cb3\cf25 (\cb1\cf0 temp \cb3\cf25 = \cb1\cf0 start_value\cb3\cf25 , \cb1\cf0 count \cb3\cf25 = \cb3\cf12 0\cb3\cf25 ;
\par \cb1\cf0\ul0\i0\b0 43           \cb1\cf0 temp \cb3\cf25 <= \cb1\cf0 end_value\cb3\cf25 ;
\par \cb1\cf0\ul0\i0\b0 44           \cb1\cf0 temp \cb3\cf25 = \cb1\cf0 temp \cb3\cf25 + \cb1\cf0 allowed_error\cb3\cf25 , \cb1\cf0 count\cb3\cf25 ++) \{
\par \cb1\cf0\ul0\i0\b0 45    
\par \cb1\cf0\ul0\i0\b0 46          \cb1\cf0 printf\cb3\cf25 (\cb3\cf20 "%.4lf "\cb3\cf25 , \cb1\cf0 y2\cb3\cf25 [\cb1\cf0 count\cb3\cf25 ]);
\par \cb1\cf0\ul0\i0\b0 47      \cb3\cf25 \}
\par \cb1\cf0\ul0\i0\b0 48    
\par \cb1\cf0\ul0\i0\b0 49      \cb1\cf0 printf\cb3\cf25 (\cb3\cf20 "\\n\\nY(3)\\n"\cb3\cf25 );
\par \cb1\cf0\ul0\i0\b0 50      \cb3\cf14\b for \b0\cb3\cf25 (\cb1\cf0 temp \cb3\cf25 = \cb1\cf0 start_value\cb3\cf25 , \cb1\cf0 count \cb3\cf25 = \cb3\cf12 0\cb3\cf25 ;
\par \cb1\cf0\ul0\i0\b0 51           \cb1\cf0 temp \cb3\cf25 <= \cb1\cf0 end_value\cb3\cf25 ;
\par \cb1\cf0\ul0\i0\b0 52           \cb1\cf0 temp \cb3\cf25 = \cb1\cf0 temp \cb3\cf25 + \cb1\cf0 allowed_error\cb3\cf25 , \cb1\cf0 count\cb3\cf25 ++) \{
\par \cb1\cf0\ul0\i0\b0 53    
\par \cb1\cf0\ul0\i0\b0 54          \cb1\cf0 printf\cb3\cf25 (\cb3\cf20 "%.4lf "\cb3\cf25 , \cb1\cf0 y3\cb3\cf25 [\cb1\cf0 count\cb3\cf25 ]);
\par \cb1\cf0\ul0\i0\b0 55      \cb3\cf25 \}
\par \cb1\cf0\ul0\i0\b0 56      \cb3\cf14\b return \b0\cb3\cf12 0\cb3\cf25 ;
\par \cb1\cf0\ul0\i0\b0 57  \cb3\cf25 \}
\par }